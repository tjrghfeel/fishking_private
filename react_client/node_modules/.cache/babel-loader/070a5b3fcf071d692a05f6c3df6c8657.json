{"ast":null,"code":"var _temp;\n\n/* global $ */\nimport { makeAutoObservable } from \"mobx\";\nexport default new (_temp = class PageStore {\n  constructor() {\n    this.scripts = [];\n    this.modalData = {\n      type: null\n    };\n    makeAutoObservable(this);\n  }\n  /** Inject 된 외부 Script 모듈 배열 */\n\n\n  /** 외부 Script 모듈을 Inject 한다. */\n  injectScript(src, onLoad, onError) {\n    return new Promise(resolve => {\n      const script = document.createElement(\"script\");\n      script.src = src;\n      script.addEventListener(\"load\", () => {\n        if (onLoad) onLoad();\n        resolve(true);\n      });\n      script.addEventListener(\"error\", () => {\n        if (onError) onError();\n        resolve(false);\n      });\n      document.body.appendChild(script);\n      this.scripts.push(script);\n    });\n  }\n  /** Inject 된 외부 Script 모듈을 Remove 한다. */\n\n\n  removeInjectetdScripts() {\n    for (let script of this.scripts) {\n      script.remove();\n    }\n  }\n  /** Window Scroll 정보를 State 에 저장한다. */\n\n\n  storeScroll(pageX, pageY) {\n    const {\n      pageXOffset,\n      pageYOffset,\n      location\n    } = window;\n    const {\n      state: prevState = {}\n    } = window.history;\n    window.history.replaceState({ ...prevState,\n      scroll: {\n        x: pageX || pageXOffset,\n        y: pageY || pageYOffset\n      }\n    }, \"\", location.pathname);\n  }\n  /** State 에 저장된 Window Scroll 을 복구한다. */\n\n\n  restoreScroll() {\n    const {\n      state: prevState = {}\n    } = window.history;\n    const {\n      scroll: prevScroll = {\n        x: 0,\n        y: 0\n      }\n    } = prevState;\n    window.scrollTo(prevScroll.x, prevScroll.y);\n  }\n  /** Modal 데이터 */\n\n\n  /** Modal 열기 */\n  openModal(data) {\n    this.modalData = data;\n    const {\n      id\n    } = this.modalData;\n    $(\"#\".concat(id)).modal(\"show\");\n  }\n\n}, _temp)();","map":{"version":3,"sources":["/Users/devcodeits/workspace/kaimobile/fishing_react/src/stores/common/PageStore.js"],"names":["makeAutoObservable","PageStore","constructor","scripts","modalData","type","injectScript","src","onLoad","onError","Promise","resolve","script","document","createElement","addEventListener","body","appendChild","push","removeInjectetdScripts","remove","storeScroll","pageX","pageY","pageXOffset","pageYOffset","location","window","state","prevState","history","replaceState","scroll","x","y","pathname","restoreScroll","prevScroll","scrollTo","openModal","data","id","$","concat","modal"],"mappings":";;AAAA;AACA,SAASA,kBAAT,QAAmC,MAAnC;AAEA,eAAe,aAAK,MAAMC,SAAN,CAAgB;AAClCC,EAAAA,WAAW,GAAG;AAAA,SAIdC,OAJc,GAIJ,EAJI;AAAA,SAmDdC,SAnDc,GAmDF;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAnDE;AACZL,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD;AACD;;;AAEA;AACAM,EAAAA,YAAY,CAACC,GAAD,EAAMC,MAAN,EAAcC,OAAd,EAAuB;AACjC,WAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC9B,YAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACAF,MAAAA,MAAM,CAACL,GAAP,GAAaA,GAAb;AACAK,MAAAA,MAAM,CAACG,gBAAP,CAAwB,MAAxB,EAAgC,MAAM;AACpC,YAAIP,MAAJ,EAAYA,MAAM;AAClBG,QAAAA,OAAO,CAAC,IAAD,CAAP;AACD,OAHD;AAIAC,MAAAA,MAAM,CAACG,gBAAP,CAAwB,OAAxB,EAAiC,MAAM;AACrC,YAAIN,OAAJ,EAAaA,OAAO;AACpBE,QAAAA,OAAO,CAAC,KAAD,CAAP;AACD,OAHD;AAIAE,MAAAA,QAAQ,CAACG,IAAT,CAAcC,WAAd,CAA0BL,MAA1B;AACA,WAAKT,OAAL,CAAae,IAAb,CAAkBN,MAAlB;AACD,KAbM,CAAP;AAcD;AACD;;;AACAO,EAAAA,sBAAsB,GAAG;AACvB,SAAK,IAAIP,MAAT,IAAmB,KAAKT,OAAxB,EAAiC;AAC/BS,MAAAA,MAAM,CAACQ,MAAP;AACD;AACF;AACD;;;AACAC,EAAAA,WAAW,CAACC,KAAD,EAAQC,KAAR,EAAe;AACxB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA,WAAf;AAA4BC,MAAAA;AAA5B,QAAyCC,MAA/C;AACA,UAAM;AAAEC,MAAAA,KAAK,EAAEC,SAAS,GAAG;AAArB,QAA4BF,MAAM,CAACG,OAAzC;AACAH,IAAAA,MAAM,CAACG,OAAP,CAAeC,YAAf,CACE,EACE,GAAGF,SADL;AAEEG,MAAAA,MAAM,EAAE;AACNC,QAAAA,CAAC,EAAEX,KAAK,IAAIE,WADN;AAENU,QAAAA,CAAC,EAAEX,KAAK,IAAIE;AAFN;AAFV,KADF,EAQE,EARF,EASEC,QAAQ,CAACS,QATX;AAWD;AACD;;;AACAC,EAAAA,aAAa,GAAG;AACd,UAAM;AAAER,MAAAA,KAAK,EAAEC,SAAS,GAAG;AAArB,QAA4BF,MAAM,CAACG,OAAzC;AACA,UAAM;AAAEE,MAAAA,MAAM,EAAEK,UAAU,GAAG;AAAEJ,QAAAA,CAAC,EAAE,CAAL;AAAQC,QAAAA,CAAC,EAAE;AAAX;AAAvB,QAA0CL,SAAhD;AACAF,IAAAA,MAAM,CAACW,QAAP,CAAgBD,UAAU,CAACJ,CAA3B,EAA8BI,UAAU,CAACH,CAAzC;AACD;AACD;;;AAEA;AACAK,EAAAA,SAAS,CAACC,IAAD,EAAO;AACd,SAAKpC,SAAL,GAAiBoC,IAAjB;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAS,KAAKrC,SAApB;AACAsC,IAAAA,CAAC,CAAC,IAAIC,MAAJ,CAAWF,EAAX,CAAD,CAAD,CAAkBG,KAAlB,CAAwB,MAAxB;AACD;;AA1DiC,CAArB,UAAf","sourcesContent":["/* global $ */\nimport { makeAutoObservable } from \"mobx\";\n\nexport default new (class PageStore {\n  constructor() {\n    makeAutoObservable(this);\n  }\n  /** Inject 된 외부 Script 모듈 배열 */\n  scripts = [];\n  /** 외부 Script 모듈을 Inject 한다. */\n  injectScript(src, onLoad, onError) {\n    return new Promise((resolve) => {\n      const script = document.createElement(\"script\");\n      script.src = src;\n      script.addEventListener(\"load\", () => {\n        if (onLoad) onLoad();\n        resolve(true);\n      });\n      script.addEventListener(\"error\", () => {\n        if (onError) onError();\n        resolve(false);\n      });\n      document.body.appendChild(script);\n      this.scripts.push(script);\n    });\n  }\n  /** Inject 된 외부 Script 모듈을 Remove 한다. */\n  removeInjectetdScripts() {\n    for (let script of this.scripts) {\n      script.remove();\n    }\n  }\n  /** Window Scroll 정보를 State 에 저장한다. */\n  storeScroll(pageX, pageY) {\n    const { pageXOffset, pageYOffset, location } = window;\n    const { state: prevState = {} } = window.history;\n    window.history.replaceState(\n      {\n        ...prevState,\n        scroll: {\n          x: pageX || pageXOffset,\n          y: pageY || pageYOffset,\n        },\n      },\n      \"\",\n      location.pathname\n    );\n  }\n  /** State 에 저장된 Window Scroll 을 복구한다. */\n  restoreScroll() {\n    const { state: prevState = {} } = window.history;\n    const { scroll: prevScroll = { x: 0, y: 0 } } = prevState;\n    window.scrollTo(prevScroll.x, prevScroll.y);\n  }\n  /** Modal 데이터 */\n  modalData = { type: null };\n  /** Modal 열기 */\n  openModal(data) {\n    this.modalData = data;\n    const { id } = this.modalData;\n    $(\"#\".concat(id)).modal(\"show\");\n  }\n})();\n"]},"metadata":{},"sourceType":"module"}