{"ast":null,"code":"import _applyDecoratedDescriptor from \"/Users/devcodeits/workspace/kaimobile/fishing_react/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _class, _temp;\n\nimport { action } from \"mobx\";\nexport default new (_class = (_temp = class PageStore {\n  constructor() {\n    this.scripts = [];\n  }\n\n  /** 외부 Script 모듈을 Inject 한다. */\n  injectScript(src, onLoad, onError) {\n    return new Promise(resolve => {\n      const script = document.createElement(\"script\");\n      script.src = src;\n\n      if (onLoad) {\n        script.addEventListener(\"load\", onLoad);\n      }\n\n      if (onError) {\n        script.addEventListener(\"error\", onError);\n      }\n\n      document.body.appendChild(script);\n      this.scripts.push(script);\n    });\n  }\n  /** Inject 된 외부 Script 모듈을 Remove 한다. */\n\n\n  removeInjectetdScripts() {\n    for (let script of this.scripts) {\n      script.remove();\n    }\n  }\n  /** Window Scroll 정보를 State 에 저장한다. */\n\n\n  storeScroll(pageX, pageY) {\n    const {\n      pageXOffset,\n      pageYOffset,\n      location\n    } = window;\n    const {\n      state: prevState = {}\n    } = window.history;\n    window.history.replaceState({ ...prevState,\n      scroll: {\n        x: pageX || pageXOffset,\n        y: pageY || pageYOffset\n      }\n    }, \"\", location.pathname);\n  }\n  /** State 에 저장된 Window Scroll 을 복구한다. */\n\n\n  restoreScroll() {\n    const {\n      state: prevState = {}\n    } = window.history;\n    const {\n      scroll: prevScroll = {\n        x: 0,\n        y: 0\n      }\n    } = prevState;\n    window.scrollTo(prevScroll.x, prevScroll.y);\n  }\n\n}, _temp), (_applyDecoratedDescriptor(_class.prototype, \"injectScript\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"injectScript\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"removeInjectetdScripts\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"removeInjectetdScripts\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"storeScroll\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"storeScroll\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"restoreScroll\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"restoreScroll\"), _class.prototype)), _class)();","map":{"version":3,"sources":["/Users/devcodeits/workspace/kaimobile/fishing_react/src/stores/common/PageStore.js"],"names":["action","PageStore","scripts","injectScript","src","onLoad","onError","Promise","resolve","script","document","createElement","addEventListener","body","appendChild","push","removeInjectetdScripts","remove","storeScroll","pageX","pageY","pageXOffset","pageYOffset","location","window","state","prevState","history","replaceState","scroll","x","y","pathname","restoreScroll","prevScroll","scrollTo"],"mappings":";;;;AAAA,SAASA,MAAT,QAAuB,MAAvB;AAEA,eAAe,uBAAK,MAAMC,SAAN,CAAgB;AAAA;AAAA,SAElCC,OAFkC,GAExB,EAFwB;AAAA;;AAGlC;AACQC,EAAAA,YAAR,CAAqBC,GAArB,EAA0BC,MAA1B,EAAkCC,OAAlC,EAA2C;AACzC,WAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC9B,YAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACAF,MAAAA,MAAM,CAACL,GAAP,GAAaA,GAAb;;AACA,UAAIC,MAAJ,EAAY;AACVI,QAAAA,MAAM,CAACG,gBAAP,CAAwB,MAAxB,EAAgCP,MAAhC;AACD;;AACD,UAAIC,OAAJ,EAAa;AACXG,QAAAA,MAAM,CAACG,gBAAP,CAAwB,OAAxB,EAAiCN,OAAjC;AACD;;AACDI,MAAAA,QAAQ,CAACG,IAAT,CAAcC,WAAd,CAA0BL,MAA1B;AACA,WAAKP,OAAL,CAAaa,IAAb,CAAkBN,MAAlB;AACD,KAXM,CAAP;AAYD;AACD;;;AACQO,EAAAA,sBAAR,GAAiC;AAC/B,SAAK,IAAIP,MAAT,IAAmB,KAAKP,OAAxB,EAAiC;AAC/BO,MAAAA,MAAM,CAACQ,MAAP;AACD;AACF;AACD;;;AACQC,EAAAA,WAAR,CAAoBC,KAApB,EAA2BC,KAA3B,EAAkC;AAChC,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA,WAAf;AAA4BC,MAAAA;AAA5B,QAAyCC,MAA/C;AACA,UAAM;AAAEC,MAAAA,KAAK,EAAEC,SAAS,GAAG;AAArB,QAA4BF,MAAM,CAACG,OAAzC;AACAH,IAAAA,MAAM,CAACG,OAAP,CAAeC,YAAf,CACE,EACE,GAAGF,SADL;AAEEG,MAAAA,MAAM,EAAE;AACNC,QAAAA,CAAC,EAAEX,KAAK,IAAIE,WADN;AAENU,QAAAA,CAAC,EAAEX,KAAK,IAAIE;AAFN;AAFV,KADF,EAQE,EARF,EASEC,QAAQ,CAACS,QATX;AAWD;AACD;;;AACQC,EAAAA,aAAR,GAAwB;AACtB,UAAM;AAAER,MAAAA,KAAK,EAAEC,SAAS,GAAG;AAArB,QAA4BF,MAAM,CAACG,OAAzC;AACA,UAAM;AAAEE,MAAAA,MAAM,EAAEK,UAAU,GAAG;AAAEJ,QAAAA,CAAC,EAAE,CAAL;AAAQC,QAAAA,CAAC,EAAE;AAAX;AAAvB,QAA0CL,SAAhD;AACAF,IAAAA,MAAM,CAACW,QAAP,CAAgBD,UAAU,CAACJ,CAA3B,EAA8BI,UAAU,CAACH,CAAzC;AACD;;AA7CiC,CAArB,wEAIZ/B,MAJY,gKAmBZA,MAnBY,+JAyBZA,MAzBY,sJAyCZA,MAzCY,oGAAf","sourcesContent":["import { action } from \"mobx\";\n\nexport default new (class PageStore {\n  /** Inject 된 외부 Script 모듈 배열 */\n  scripts = [];\n  /** 외부 Script 모듈을 Inject 한다. */\n  @action injectScript(src, onLoad, onError) {\n    return new Promise((resolve) => {\n      const script = document.createElement(\"script\");\n      script.src = src;\n      if (onLoad) {\n        script.addEventListener(\"load\", onLoad);\n      }\n      if (onError) {\n        script.addEventListener(\"error\", onError);\n      }\n      document.body.appendChild(script);\n      this.scripts.push(script);\n    });\n  }\n  /** Inject 된 외부 Script 모듈을 Remove 한다. */\n  @action removeInjectetdScripts() {\n    for (let script of this.scripts) {\n      script.remove();\n    }\n  }\n  /** Window Scroll 정보를 State 에 저장한다. */\n  @action storeScroll(pageX, pageY) {\n    const { pageXOffset, pageYOffset, location } = window;\n    const { state: prevState = {} } = window.history;\n    window.history.replaceState(\n      {\n        ...prevState,\n        scroll: {\n          x: pageX || pageXOffset,\n          y: pageY || pageYOffset,\n        },\n      },\n      \"\",\n      location.pathname\n    );\n  }\n  /** State 에 저장된 Window Scroll 을 복구한다. */\n  @action restoreScroll() {\n    const { state: prevState = {} } = window.history;\n    const { scroll: prevScroll = { x: 0, y: 0 } } = prevState;\n    window.scrollTo(prevScroll.x, prevScroll.y);\n  }\n})();\n"]},"metadata":{},"sourceType":"module"}