plugins {
    id 'org.springframework.boot' version '2.3.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    id 'war'
}

group = 'com.tobe'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    google()
}
bootWar {
    archiveBaseName = "fishkingV2"
    archiveFileName = "fishkingV2.war"
    archiveVersion = "0.0.1"
}

apply plugin: "io.spring.dependency-management"
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    implementation 'commons-io:commons-io:2.6'
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'com.google.code.gson:gson'
    implementation 'junit:junit:4.12'

    implementation 'org.jcodec:jcodec:0.2.3'
    implementation 'org.jcodec:jcodec-javase:0.2.3'

    implementation 'org.apache.httpcomponents:httpclient:4.5'

    implementation 'com.nimbusds:nimbus-jose-jwt:3.10'

    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
    implementation 'javax.servlet:jstl'
/*
    implementation 'net.rakugakibox.util:yaml-resource-bundle:1.1'
*/

    // https://mvnrepository.com/artifact/org.modelmapper/modelmapper
    compile group: 'org.modelmapper', name: 'modelmapper', version: '2.3.9'

    compileOnly 'org.hibernate:hibernate-validator:5.2.4.Final'
    compileOnly 'org.projectlombok:lombok'

    // querydsl
    compile("com.querydsl:querydsl-core") // querydsl
    compile("com.querydsl:querydsl-jpa") // querydsl

    compile group: 'com.ibm.icu', name: 'icu4j', version: '68.1'

//    // google auth
//    compile 'com.google.api-client:google-api-client:1.31.3'
//    // youtube data api
//    compile 'com.google.apis:google-api-services-youtube:v3-rev20210210-1.31.0'

    //nice 모듈
    compile files('libs/NiceID.jar')
//    compile files('libs/NiceID_ibm')

    //jsp설정
//    compile('javax.servlet:jstl:1.2')
//    compile("org.apache.tomcat.embed:tomcat-embed-jasper")




    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'

    // querydsl
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa" // querydsl JPAAnnotationProcessor 사용 지정
    annotationProcessor("jakarta.persistence:jakarta.persistence-api")
    annotationProcessor("jakarta.annotation:jakarta.annotation-api")

    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    compile group: 'org.bgee.log4jdbc-log4j2', name: 'log4jdbc-log4j2-jdbc4', version: '1.16'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    useJUnitPlatform()
}

def generated='src/main/generated'
sourceSets {
    main.java.srcDirs += [ generated ]
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(generated)
}

clean.doLast {
    file(generated).deleteDir()
}